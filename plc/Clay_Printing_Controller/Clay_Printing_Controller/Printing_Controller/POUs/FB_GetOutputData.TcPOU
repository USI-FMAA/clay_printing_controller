<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="FB_GetOutputData" Id="{2c756959-03db-47d9-a078-2da0d3023173}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK  FB_GetOutputData
VAR_INPUT
	//Gerenal
	b_Output_number_REALMode : BOOL;
END_VAR

VAR_IN_OUT
	//CC1
	b_mode_manual : BOOL;
	b_mode_laptop : BOOL;
	b_mode_robot : BOOL;
	b_CC1_power_on : BOOL;
	n_current_mode : INT;

	//CP1
	b_CP1_is_run : BOOL;
	b_CP1_is_ready : BOOL;
	b_CP1_power_on :BOOL;
	b_CP1_safety_grid_on : BOOL;
	b_CP1_drive_error :BOOL;

	f_CP1_status_torque : REAL;
	f_CP1_status_speed : REAL;
	
END_VAR
VAR_OUTPUT
END_VAR
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// ***********************************************************************************
//
// USI Mendrisio, Largo Bernasconi 2, CH-6850 Mendrisio
// ETH Zurich, Building HIF E26, Laura-Hezner-Weg 7, CH-8093 Zürich
//
// ***********************************************************************************
//
// PROJECT     :  Clay Printing Controller
// FUNCTION    :  Get data From IO and process (Custom function block)
// AUTHOR      :  WeiTing Chen
// EMAIL       :  chen@mesh.ch
// Copyright   :  USI FMAA Mendrisio(CH) 2025
//
// ***********************************************************************************


// General
b_mode_manual := GVL.b_mode_manual;
b_mode_laptop := GVL.b_mode_laptop;
b_mode_robot := GVL.b_mode_robot;
b_CC1_power_on := GVL.b_CC1_power_on;

IF GVL.s_current_mode = 'Controller'THEN
	n_current_mode := 1;
ELSIF GVL.s_current_mode = 'Laptop' THEN
	n_current_mode := 2;
ELSIF GVL.s_current_mode = 'Robot' THEN
	n_current_mode := 3;
ELSE
	n_current_mode := 4;
END_IF


// Concrete Pump
// Status
GVL.b_CP1_Is_Run := GVL_IO.ob_CP1_Forward;
b_CP1_is_run := GVL.b_CP1_Is_Run;

GVL.b_CP1_is_ready := GVL_IO.ib_CP1_Ready;
b_CP1_is_ready := GVL.b_CP1_is_ready;

GVL.b_CP1_power_on :=  GVL_IO.ib_CP1_Ready;
b_CP1_power_on := GVL.b_CP1_power_on;

GVL.b_CP1_safety_grid_on := NOT GVL_IO.ib_CP1_Safety_Grid_Mounted;
b_CP1_safety_grid_on := GVL.b_CP1_safety_grid_on;

GVL.b_CP1_drive_error := GVL_IO.ib_CP1_Drive_Error;
b_CP1_drive_error := GVL.b_CP1_drive_error;


// Torque
// TODO: make it from actual speed value.

IF b_Output_number_REALMode THEN
	f_CP1_status_torque := F_LowpassFilter(GVL_IO.ib_CP1_Actual_Speed)*0.1;
	f_CP1_status_speed := F_LowpassFilter(GVL_IO.ib_CP1_Actual_Speed)*0.1;

ELSE
	f_CP1_status_speed := F_LowpassFilter(GVL_IO.ib_CP1_Actual_Speed);
	f_CP1_status_speed := F_LowpassFilter(GVL_IO.ib_CP1_Actual_Speed);
END_IF

// Temperature
// pass
// Pressure
// pass
]]></ST>
    </Implementation>
    <LineIds Name="FB_GetOutputData">
      <LineId Id="165" Count="12" />
      <LineId Id="54" Count="0" />
      <LineId Id="179" Count="0" />
      <LineId Id="178" Count="0" />
      <LineId Id="55" Count="36" />
      <LineId Id="192" Count="0" />
      <LineId Id="186" Count="1" />
      <LineId Id="193" Count="0" />
      <LineId Id="188" Count="3" />
      <LineId Id="185" Count="0" />
      <LineId Id="184" Count="0" />
      <LineId Id="94" Count="3" />
      <LineId Id="100" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>